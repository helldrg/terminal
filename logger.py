# print all 
from xml.etree.ElementTree import Element, SubElement, Comment, ElementTree
import xml.etree.ElementTree 
  
class Logger:
    count = 0
    def __init__(self):
        pass

    def GenerateXML(self, fileName) :
        root = Element("Logger")
        root.set('version', '1.0')
        root.set("count", str(0))
        root.append(Comment('Generated by ElementTree_csv_to_xml.py for PyMOTW'))

        #ET.SubElement(doc, "field1", name="blah").text = "some value1"
        for i in range(2):
            log = SubElement(root, "Log")
            #log = Element("Log")
            #root.append (log)

            id = SubElement(log, "id")
            id.text = "0"
            time = SubElement(log, "time")
            time.text = "6999"
            action = SubElement(log, "action")
            action.text = "new device"
            description = SubElement(log, "description")
            description.text = "создание нового устройства"

            self.count += 1
            root.set("count", str(self.count))

        tree = ElementTree(root)

        try:
            with open (fileName, "wb") as files:
                tree.write(files)
        except Exception:
            #TODO: print message in status bar ok
            print('Создать файл с логами не удалось')
            assert False, 'Не удалось создать файл'

    def addElement(self):
        tree = xml.etree.ElementTree.parse('log.xml')
        root = tree.getroot()

        log = SubElement(root, "Log")

        id = SubElement(log, "id")
        id.text = "0"
        time = SubElement(log, "time")
        time.text = "6999"
        action = SubElement(log, "action")
        action.text = "0"
        description = SubElement(log, "description")
        description.text = "6999"

        tree = ElementTree(root)

        with open ('log.xml', "wb") as files:
            tree.write(files)

    def printElemets(self):
        tree = xml.etree.ElementTree.parse('log.xml')
        root = tree.getroot()

        # all items data
        print('\nAll item data:')
        for elem in root:
            for subelem in elem:
                print(subelem.tag + " = " +  subelem.text)

    def findElementsId(self, id):
        pass

    def countElements(self):
        tree = xml.etree.ElementTree.parse('log.xml')
        root = tree.getroot()
        print(len(root[0]))
  
# Driver Code
if __name__ == "__main__": 
    Logger = Logger()
    Logger.GenerateXML("log.xml")
    for i in range(5):
        Logger.addElement()

    Logger.printElemets()